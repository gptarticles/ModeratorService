# Setup for deployment
#
# Required env variables:
# MICROSERVICES_NETWORK_NAME - name of internal network of all microservices
# DOCKER_REGISTRY - URL of docker registry

services:
  auth-service:
    image: ${DOCKER_REGISTRY}/gpt-articles/moderation-service:latest
    container_name: gpt-articles-moderation-service
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      DB_HOST: gpt-articles-moderation-postgres
      DB_PORT: 5432
      DB_USERNAME: test_user
      DB_PASSWORD: test_pass
      DB_NAME: articles_db
      S3_ENDPOINT_URL: 'http://gpt-articles-moderation-minio:9000'
      S3_ACCESS_KEY: 'admin'
      S3_SECRET_KEY: 'supersecret'
    restart: unless-stopped
    networks:
      - all-services-network
      - service-network
    depends_on:
      - db
      - minio

  db:
    image: postgres:17-alpine
    container_name: gpt-articles-moderation-postgres
    environment:
      POSTGRES_DB: articles_db
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_pass
    restart: unless-stopped
    networks:
      - service-network
    volumes:
      - ./volumes/postgres/data:/var/lib/postgresql/data

  minio:
    container_name: gpt-articles-moderation-minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=supersecret
    image: quay.io/minio/minio:latest
    restart: unless-stopped
    networks:
      - service-network
    volumes:
      - ./volumes/minio/data:/data

networks:
  # Internal network for the service and its dependencies
  service-network:
    name: gpt-articles-moderation-network
    driver: bridge
    internal: true
  # Internal network of all microservices
  all-services-network:
    name: ${MICROSERVICES_NETWORK_NAME}
    driver: bridge
    internal: true